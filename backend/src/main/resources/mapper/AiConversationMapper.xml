<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noncore.assessment.mapper.AiConversationMapper">

    <resultMap id="BaseResultMap" type="com.noncore.assessment.entity.AiConversation">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="title" property="title"/>
        <result column="model" property="model"/>
        <result column="provider" property="provider"/>
        <result column="pinned" property="pinned"/>
        <result column="archived" property="archived"/>
        <result column="deleted" property="deleted"/>
        <result column="last_message_at" property="lastMessageAt"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, title, model, provider, pinned, archived, deleted, last_message_at, created_at, updated_at
    </sql>

    <insert id="insert" parameterType="com.noncore.assessment.entity.AiConversation" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ai_conversations (user_id, title, model, provider, pinned, archived, deleted, last_message_at, created_at, updated_at)
        VALUES (#{userId}, #{title}, #{model}, #{provider}, #{pinned}, #{archived}, #{deleted}, #{lastMessageAt}, NOW(), NOW())
    </insert>

    <select id="selectByIdAndUser" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM ai_conversations
        WHERE id = #{id} AND user_id = #{userId} AND deleted = 0
    </select>

    <select id="listByUser" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM ai_conversations
        WHERE user_id = #{userId} AND deleted = 0
        <if test="q != null and q != ''">
            AND title LIKE CONCAT('%', #{q}, '%')
        </if>
        <if test="pinned != null">
            AND pinned = #{pinned}
        </if>
        <if test="archived != null">
            AND archived = #{archived}
        </if>
        ORDER BY pinned DESC, last_message_at DESC, updated_at DESC
    </select>

    <update id="update" parameterType="com.noncore.assessment.entity.AiConversation">
        UPDATE ai_conversations
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="model != null">model = #{model},</if>
            <if test="provider != null">provider = #{provider},</if>
            <if test="pinned != null">pinned = #{pinned},</if>
            <if test="archived != null">archived = #{archived},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            updated_at = NOW()
        </set>
        WHERE id = #{id} AND user_id = #{userId}
    </update>

    <update id="updateLastMessageAt">
        UPDATE ai_conversations SET last_message_at = #{ts}, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteByIdAndUser">
        DELETE FROM ai_conversations WHERE id = #{id} AND user_id = #{userId}
    </delete>

</mapper>


