<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noncore.assessment.mapper.LearningRecommendationMapper">

    <!-- 结果映射 -->
    <resultMap id="LearningRecommendationResultMap" type="com.noncore.assessment.entity.LearningRecommendation">
        <id column="id" property="id"/>
        <result column="student_id" property="studentId"/>
        <result column="dimension_id" property="dimensionId"/>
        <result column="title" property="title"/>
        <result column="description" property="description"/>
        <result column="recommendation_type" property="recommendationType"/>
        <result column="resource_url" property="resourceUrl"/>
        <result column="difficulty_level" property="difficultyLevel"/>
        <result column="estimated_time" property="estimatedTime"/>
        <result column="priority_score" property="priorityScore"/>
        <result column="is_read" property="isRead"/>
        <result column="is_accepted" property="isAccepted"/>
        <result column="created_at" property="createdAt"/>
        <result column="expires_at" property="expiresAt"/>
    </resultMap>

    <!-- 详细结果映射，带学生和维度冗余字段 -->
    <resultMap id="LearningRecommendationDetailResultMap" type="com.noncore.assessment.entity.LearningRecommendation" extends="LearningRecommendationResultMap">
        <result column="student_name" property="studentName"/>
        <result column="dimension_name" property="dimensionName"/>
        <result column="dimension_category" property="dimensionCategory"/>
    </resultMap>

    <!-- 基础查询字段 -->
    <sql id="learningRecommendationColumns">
        r.id, r.student_id, r.dimension_id, r.title, r.description,
        r.recommendation_type, r.resource_url, r.difficulty_level, r.estimated_time,
        r.priority_score, r.is_read, r.is_accepted, r.created_at, r.expires_at
    </sql>

    <sql id="learningRecommendationDetailColumns">
        <include refid="learningRecommendationColumns"/>,
        COALESCE(u.nickname, u.username) as student_name,
        d.name as dimension_name,
        d.category as dimension_category
    </sql>

    <!-- 插入 -->
    <insert id="insertRecommendation" parameterType="com.noncore.assessment.entity.LearningRecommendation" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO learning_recommendations (
            student_id, dimension_id, title, description, recommendation_type,
            resource_url, difficulty_level, estimated_time, priority_score,
            is_read, is_accepted, created_at, expires_at
        ) VALUES (
                     #{studentId}, #{dimensionId}, #{title}, #{description}, #{recommendationType},
                     #{resourceUrl}, #{difficultyLevel}, #{estimatedTime}, #{priorityScore},
                     #{isRead}, #{isAccepted}, NOW(), #{expiresAt}
                 )
    </insert>

    <!-- 查询byId -->
    <select id="selectRecommendationById" parameterType="long" resultMap="LearningRecommendationDetailResultMap">
        SELECT <include refid="learningRecommendationDetailColumns"/>
        FROM learning_recommendations r
        LEFT JOIN users u ON r.student_id = u.id
        LEFT JOIN ability_dimensions d ON r.dimension_id = d.id
        WHERE r.id = #{id}
    </select>

    <!-- 更新 -->
    <update id="updateRecommendation" parameterType="com.noncore.assessment.entity.LearningRecommendation">
        UPDATE learning_recommendations
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="description != null">description = #{description},</if>
            <if test="recommendationType != null">recommendation_type = #{recommendationType},</if>
            <if test="resourceUrl != null">resource_url = #{resourceUrl},</if>
            <if test="difficultyLevel != null">difficulty_level = #{difficultyLevel},</if>
            <if test="estimatedTime != null">estimated_time = #{estimatedTime},</if>
            <if test="priorityScore != null">priority_score = #{priorityScore},</if>
            <if test="isRead != null">is_read = #{isRead},</if>
            <if test="isAccepted != null">is_accepted = #{isAccepted},</if>
            <if test="expiresAt != null">expires_at = #{expiresAt},</if>
            updated_at = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除 -->
    <delete id="deleteRecommendation" parameterType="long">
        DELETE FROM learning_recommendations WHERE id = #{id}
    </delete>

    <!-- 按学生查 -->
    <select id="selectByStudentId" parameterType="long" resultMap="LearningRecommendationDetailResultMap">
        SELECT <include refid="learningRecommendationDetailColumns"/>
        FROM learning_recommendations r
        LEFT JOIN users u ON r.student_id = u.id
        LEFT JOIN ability_dimensions d ON r.dimension_id = d.id
        WHERE r.student_id = #{studentId}
        ORDER BY r.priority_score DESC, r.created_at DESC
        <if test="limit != null">LIMIT #{limit}</if>
    </select>

    <!-- 按学生和维度查 -->
    <select id="selectByStudentAndDimension" resultMap="LearningRecommendationDetailResultMap">
        SELECT <include refid="learningRecommendationDetailColumns"/>
        FROM learning_recommendations r
        LEFT JOIN users u ON r.student_id = u.id
        LEFT JOIN ability_dimensions d ON r.dimension_id = d.id
        WHERE r.student_id = #{studentId} AND r.dimension_id = #{dimensionId}
        ORDER BY r.priority_score DESC, r.created_at DESC
        <if test="limit != null">LIMIT #{limit}</if>
    </select>

    <!-- 分页查询 -->
    <select id="selectRecommendationsWithPagination" resultMap="LearningRecommendationDetailResultMap">
        SELECT <include refid="learningRecommendationDetailColumns"/>
        FROM learning_recommendations r
        LEFT JOIN users u ON r.student_id = u.id
        LEFT JOIN ability_dimensions d ON r.dimension_id = d.id
        <where>
            <if test="studentId != null">r.student_id = #{studentId}</if>
            <if test="dimensionId != null">AND r.dimension_id = #{dimensionId}</if>
            <if test="recommendationType != null and recommendationType != ''">AND r.recommendation_type = #{recommendationType}</if>
            <if test="isRead != null">AND r.is_read = #{isRead}</if>
        </where>
        ORDER BY r.priority_score DESC, r.created_at DESC
        LIMIT #{offset}, #{size}
    </select>

    <!-- 统计数量 -->
    <select id="countRecommendations" resultType="integer">
        SELECT COUNT(1)
        FROM learning_recommendations r
        <where>
            <if test="studentId != null">r.student_id = #{studentId}</if>
            <if test="dimensionId != null">AND r.dimension_id = #{dimensionId}</if>
            <if test="recommendationType != null and recommendationType != ''">AND r.recommendation_type = #{recommendationType}</if>
            <if test="isRead != null">AND r.is_read = #{isRead}</if>
        </where>
    </select>

    <!-- 优先级查询 -->
    <select id="selectByPriority" resultMap="LearningRecommendationDetailResultMap">
        SELECT <include refid="learningRecommendationDetailColumns"/>
        FROM learning_recommendations r
        LEFT JOIN users u ON r.student_id = u.id
        LEFT JOIN ability_dimensions d ON r.dimension_id = d.id
        WHERE r.student_id = #{studentId} AND r.priority_score &gt;= #{minPriority}
        ORDER BY r.priority_score DESC, r.created_at DESC
        <if test="limit != null">LIMIT #{limit}</if>
    </select>

    <!-- 标记已读 -->
    <update id="markAsRead">
        UPDATE learning_recommendations SET is_read = 1 WHERE id = #{id}
    </update>

    <!-- 标记已采纳 -->
    <update id="markAsAccepted">
        UPDATE learning_recommendations SET is_accepted = 1 WHERE id = #{id}
    </update>

    <!-- 批量删除过期建议 -->
    <delete id="deleteExpiredRecommendations">
        DELETE FROM learning_recommendations WHERE expires_at &lt; NOW() AND is_accepted = 0
    </delete>

    <!-- 统计未读建议数量 -->
    <select id="countUnreadRecommendations" parameterType="long" resultType="integer">
        SELECT COUNT(1)
        FROM learning_recommendations r
        WHERE r.student_id = #{studentId} AND r.is_read = 0
    </select>

    <!-- 按类型统计建议数量 -->
    <select id="countRecommendationsByType" resultType="map">
        SELECT r.recommendation_type, COUNT(1) as count
        FROM learning_recommendations r
        WHERE r.student_id = #{studentId}
        GROUP BY r.recommendation_type
    </select>

    <!-- 获取最受欢迎类型 -->
    <select id="getPopularRecommendationTypes" resultType="map">
        SELECT r.recommendation_type, COUNT(1) as count
        FROM learning_recommendations r
        GROUP BY r.recommendation_type
        ORDER BY count DESC
        LIMIT #{limit}
    </select>

</mapper>