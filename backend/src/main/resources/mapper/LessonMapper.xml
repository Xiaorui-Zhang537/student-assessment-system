<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noncore.assessment.mapper.LessonMapper">

    <resultMap id="LessonResultMap" type="com.noncore.assessment.entity.Lesson">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="CLOB"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="content_type" property="contentType" jdbcType="VARCHAR"/>
        <result column="video_url" property="videoUrl" jdbcType="VARCHAR"/>
        <result column="duration" property="duration" jdbcType="INTEGER"/>
        <result column="order_index" property="orderIndex" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="is_free" property="isFree" jdbcType="BOOLEAN"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="deleted" property="deleted" jdbcType="BOOLEAN"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, course_id, title, description, content, content_type, video_url, duration, 
        order_index, status, is_free, created_at, updated_at, deleted
    </sql>

    <!-- 插入课时 -->
    <insert id="insertLesson" parameterType="com.noncore.assessment.entity.Lesson" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO lessons (
            course_id, title, description, content, content_type, video_url, duration, 
            order_index, status, is_free, created_at, updated_at, deleted
        ) VALUES (
            #{courseId}, #{title}, #{description}, #{content}, #{contentType}, #{videoUrl}, #{duration}, 
            #{orderIndex}, #{status}, #{isFree}, #{createdAt}, #{updatedAt}, #{deleted}
        )
    </insert>

    <!-- 根据ID查询课时 -->
    <select id="selectLessonById" parameterType="java.lang.Long" resultMap="LessonResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM lessons
        WHERE id = #{id} AND deleted = false
    </select>

    <!-- 根据课程ID查询课时列表 -->
    <select id="selectLessonsByCourseId" parameterType="java.lang.Long" resultMap="LessonResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM lessons
        WHERE course_id = #{courseId} AND deleted = false
        ORDER BY order_index ASC
    </select>

    <!-- 更新课时 -->
    <update id="updateLesson" parameterType="com.noncore.assessment.entity.Lesson">
        UPDATE lessons SET
            title = #{title},
            description = #{description},
            content = #{content},
            content_type = #{contentType},
            video_url = #{videoUrl},
            duration = #{duration},
            order_index = #{orderIndex},
            status = #{status},
            is_free = #{isFree},
            updated_at = #{updatedAt}
        WHERE id = #{id} AND deleted = false
    </update>

    <!-- 删除课时（软删除） -->
    <update id="deleteLesson" parameterType="java.lang.Long">
        UPDATE lessons SET deleted = true, updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 统计课程课时数 -->
    <select id="countLessonsByCourse" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM lessons
        WHERE course_id = #{courseId} AND deleted = false
    </select>

    <!-- 获取课程总时长 -->
    <select id="getTotalDurationByCourse" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COALESCE(SUM(duration), 0)
        FROM lessons
        WHERE course_id = #{courseId} AND deleted = false
    </select>

</mapper> 